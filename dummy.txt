Timer unit: 1e-06 s

Total time: 38.3172 s
File: /home/isucon/go/src/github.com/isucon/isucon9-qualify/webapp/python/app.py
Function: get_transactions at line 461

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   461                                           @app.route("/users/transactions.json", methods=["GET"])
   462                                           @Profiler('/home/isucon/go/src/github.com/isucon/isucon9-qualify/profile')
   463                                           def get_transactions():
   464        15      25066.0   1671.1      0.1      user = get_user()
   465        15        360.0     24.0      0.0      conn = dbh()
   466
   467        15         21.0      1.4      0.0      item_id = 0
   468        15         19.0      1.3      0.0      created_at = 0
   469
   470        15       1368.0     91.2      0.0      item_id_str = flask.request.args.get('item_id')
   471        15         23.0      1.5      0.0      if item_id_str:
   472         7         21.0      3.0      0.0          if not item_id_str.isdecimal() or int(item_id_str) < 0:
   473                                                       http_json_error(requests.codes['bad_request'], "item_id param error")
   474         7         12.0      1.7      0.0          item_id = int(item_id_str)
   475
   476        15        243.0     16.2      0.0      created_at_str = flask.request.args.get('created_at')
   477        15         22.0      1.5      0.0      if created_at_str:
   478         7         14.0      2.0      0.0          if not created_at_str.isdecimal() or int(created_at_str) < 0:
   479                                                       http_json_error(requests.codes['bad_request'], "created_at param error")
   480         7         10.0      1.4      0.0          created_at = int(created_at_str)
   481
   482        15        134.0      8.9      0.0      with conn.cursor() as c:
   483
   484        15         20.0      1.3      0.0          try:
   485
   486        15         23.0      1.5      0.0              if item_id > 0 and created_at > 0:
   487         7         10.0      1.4      0.0                  sql = "SELECT * FROM `items` WHERE (`seller_id` = %s OR `buyer_id` = %s) AND `status` IN (%s,%s,%s,%s,%s) AND (`created_at` < %s OR (`created_at` <= %s AND `id` < %s)) ORDER BY `created_at` DESC, `id` DESC LIMIT %s"
   488         7          8.0      1.1      0.0                  c.execute(sql, (
   489         7          8.0      1.1      0.0                      user['id'],
   490         7          9.0      1.3      0.0                      user['id'],
   491         7         17.0      2.4      0.0                      Constants.ITEM_STATUS_ON_SALE,
   492         7         12.0      1.7      0.0                      Constants.ITEM_STATUS_TRADING,
   493         7          8.0      1.1      0.0                      Constants.ITEM_STATUS_SOLD_OUT,
   494         7         10.0      1.4      0.0                      Constants.ITEM_STATUS_CANCEL,
   495         7         10.0      1.4      0.0                      Constants.ITEM_STATUS_STOP,
   496         7         47.0      6.7      0.0                      datetime.datetime.fromtimestamp(created_at),
   497         7         14.0      2.0      0.0                      datetime.datetime.fromtimestamp(created_at),
   498         7          7.0      1.0      0.0                      item_id,
   499         7     239978.0  34282.6      0.6                      Constants.TRANSACTIONS_PER_PAGE + 1,
   500                                                           ))
   501
   502                                                       else:
   503         8         14.0      1.8      0.0                  sql = "SELECT * FROM `items` WHERE (`seller_id` = %s OR `buyer_id` = %s ) AND `status` IN (%s,%s,%s,%s,%s) ORDER BY `created_at` DESC, `id` DESC LIMIT %s"
   504         8         14.0      1.8      0.0                  c.execute(sql, [
   505         8         28.0      3.5      0.0                      user['id'],
   506         8         12.0      1.5      0.0                      user['id'],
   507         8         24.0      3.0      0.0                      Constants.ITEM_STATUS_ON_SALE,
   508         8         13.0      1.6      0.0                      Constants.ITEM_STATUS_TRADING,
   509         8         15.0      1.9      0.0                      Constants.ITEM_STATUS_SOLD_OUT,
   510         8         14.0      1.8      0.0                      Constants.ITEM_STATUS_CANCEL,
   511         8         15.0      1.9      0.0                      Constants.ITEM_STATUS_STOP,
   512         8     398846.0  49855.8      1.0                      Constants.TRANSACTIONS_PER_PAGE + 1,
   513                                                           ])
   514
   515        15         45.0      3.0      0.0              item_details = []
   516        15         21.0      1.4      0.0              while True:
   517       167        881.0      5.3      0.0                  item = c.fetchone()
   518
   519       167        258.0      1.5      0.0                  if item is None:
   520        15        146.0      9.7      0.0                      break
   521
   522       152      77739.0    511.4      0.2                  seller = get_user_simple_by_id(item["seller_id"])
   523       152     125056.0    822.7      0.3                  category = get_category_by_id(item["category_id"])
   524
   525       152        423.0      2.8      0.0                  item["category"] = category
   526       152        783.0      5.2      0.0                  item["seller"] = to_user_json(seller)
   527       152        814.0      5.4      0.0                  item["image_url"] = get_image_url(item["image_name"])
   528       152       5657.0     37.2      0.0                  item = to_item_json(item, simple=False)
   529
   530       152        341.0      2.2      0.0                  item_details.append(item)
   531
   532       152       1776.0     11.7      0.0                  with conn.cursor() as c2:
   533       152        230.0      1.5      0.0                      sql = "SELECT * FROM `transaction_evidences` WHERE `item_id` = %s"
   534       152     123613.0    813.2      0.3                      c2.execute(sql, [item['id']])
   535       152       1000.0      6.6      0.0                      transaction_evidence = c2.fetchone()
   536
   537
   538       152       1128.0      7.4      0.0                      if transaction_evidence:
   539        69        115.0      1.7      0.0                          sql = "SELECT * FROM `shippings` WHERE `transaction_evidence_id` = %s"
   540        69      49937.0    723.7      0.1                          c2.execute(sql, [transaction_evidence["id"]])
   541        69        569.0      8.2      0.0                          shipping = c2.fetchone()
   542        69        119.0      1.7      0.0                          if not shipping:
   543                                                                       http_json_error(requests.codes['not_found'], "shipping not found")
   544
   545        69   37249960.0 539854.5     97.2                          ssr = api_shipment_status(get_shipment_service_url(), {"reserve_id": shipping["reserve_id"]})
   546        69        312.0      4.5      0.0                          item["transaction_evidence_id"] = transaction_evidence["id"]
   547        69        141.0      2.0      0.0                          item["transaction_evidence_status"] = transaction_evidence["status"]
   548        69       1827.0     26.5      0.0                          item["shipping_status"] = ssr["status"]
   549
   550                                                   except MySQLdb.Error as err:
   551                                                       app.logger.exception(err)
   552                                                       http_json_error(requests.codes['internal_server_error'], "db error")
   553
   554        15         22.0      1.5      0.0      has_next = False
   555        15         40.0      2.7      0.0      if len(item_details) > Constants.TRANSACTIONS_PER_PAGE:
   556        11         16.0      1.5      0.0          has_next = Truea
   557        11         37.0      3.4      0.0          item_details = item_details[:Constants.TRANSACTIONS_PER_PAGE]
   558
   559        15         39.0      2.6      0.0      return flask.jsonify(dict(
   560        15         24.0      1.6      0.0          items=item_details,
   561        15       7629.0    508.6      0.0          has_next=has_next,
   562                                               ))
